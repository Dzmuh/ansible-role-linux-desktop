---

# Copyright (c) 2020 Ilya Fralkou
#
# MIT License
#
#     https://opensource.org/licenses/MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

- name: apt-get update
  apt:
    update_cache: true
  changed_when: false
  tags: 
    - bootstrap
    - ufw

- name: Install ufw package
  package:
    name: ufw
    state: present
  register: ufw_install
  when: managed_firewall.enabled|default(false)|bool == true
  tags: 
    - bootstrap
    - ufw

- name: Start and enable ufw
  service:
    name: ufw
    state: started
    enabled: yes
  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
  tags:
    - ufw
    - configure

- name: Enable logging
  ufw:
    state: enabled
    # TODO : Вынести в настройки?
    #logging: on
    logging: high
  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
  notify: restart ufw
  tags:
    - ufw
    - configure

- name: Reject auth
  ufw:
    rule: reject
    port: auth
    log: yes
  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
  notify: restart ufw

# TODO: Тут нуанс в том, что SSH порт может отличатся.
#- name: Set limit sshd connections
#  ufw:
#    rule: limit
#    port: ssh
#    proto: tcp
#  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
#  notify: restart ufw

- name: Allow access from RFC1918 networks
  ufw:
    rule: allow
    src: '{{ item }}'
  with_items:
  - 10.0.0.0/8
  - 172.16.0.0/12
  - 192.168.0.0/16
  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
  notify: restart ufw

- name: Allow OpenSSH
  ufw:
    rule: allow
    name: OpenSSH
  when: ufw_install is success and managed_firewall.enabled|default(false)|bool == true
  notify: restart ufw
